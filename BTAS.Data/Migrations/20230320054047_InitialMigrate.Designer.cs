// <auto-generated />
using System;
using BTAS.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BTAS.Data.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20230320054047_InitialMigrate")]
    partial class InitialMigrate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasCharSet("utf8mb4")
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("BTAS.Data.Models.tbl_3pl_routing", b =>
                {
                    b.Property<int>("tbl_routings_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_routings_code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_routings_states")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_routings_suburbs")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("tbl_routings_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_3pl_routings");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_address", b =>
                {
                    b.Property<int>("idtbl_address")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_address_address1")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_address_address2")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_address_city")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_address_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_address_country")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_address_postcode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_address_state")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_address_suburb")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_address_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("idtbl_address")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_address");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_amazon_routing", b =>
                {
                    b.Property<int>("tbl_routings_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_routings_code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_routings_states")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_routings_suburbs")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("tbl_routings_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_amazon_routings");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_austway_routing", b =>
                {
                    b.Property<int>("tbl_routings_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_routings_code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_routings_states")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_routings_suburbs")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("tbl_routings_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_austway_routings");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_barcode", b =>
                {
                    b.Property<int>("tbl_barcodes_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_barcodes_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("tbl_barcodes_manifest_link_id")
                        .HasColumnType("int(11)");

                    b.Property<int>("tbl_barcodes_parcel_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_barcodes_sequence")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("tbl_barcodes_shipment_id")
                        .HasColumnType("int(11)");

                    b.HasKey("tbl_barcodes_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_barcodes");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_border_routing", b =>
                {
                    b.Property<int>("tbl_routings_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_routings_code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_routings_states")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_routings_suburbs")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("tbl_routings_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_border_routings");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_carrier_api_response", b =>
                {
                    b.Property<int>("idtbl_carrier_api_response")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_carrier_api_manifestId")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_carrier_api_response_ind")
                        .HasColumnType("int(1)");

                    b.Property<string>("tbl_carrier_api_response_message")
                        .HasColumnType("longtext");

                    b.Property<int?>("tbl_carrier_api_response_parcelId")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_carrier_api_trackingRef")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("idtbl_carrier_api_response")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_carrier_api_response");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_carrier_info", b =>
                {
                    b.Property<int>("idtbl_carrier_info")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("tbl_carrier_active")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("tbl_carrier_address1")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("tbl_carrier_address2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_city")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_code")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_contactName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_country_destination")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_carrier_country_origin")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_carrier_email")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_phone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_postCode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_carrier_state")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_carrier_suburb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_carrier_type")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("idtbl_carrier_info")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_carrier_info");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_client_contact_detail", b =>
                {
                    b.Property<int>("idtbl_client_contact_detail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("AddressCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ClientHeaderCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("tbl_address_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_client_contact_details_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_client_contact_details_companyName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_client_contact_details_contactName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_client_contact_details_email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("tbl_client_contact_details_isActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("tbl_client_contact_details_phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_client_contact_details_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("tbl_client_header_id")
                        .HasColumnType("int(11)");

                    b.HasKey("idtbl_client_contact_detail")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_address_id" }, "FK_tbl_client_contact_details_tbl_address_tbl_address_id_idx");

                    b.HasIndex(new[] { "tbl_client_header_id" }, "IX_tbl_client_contact_details_tbl_client_header_id");

                    b.ToTable("tbl_client_contact_details");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_client_contact_group", b =>
                {
                    b.Property<int>("idtbl_client_contact_group")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_client_contact_group_code")
                        .HasColumnType("int(11)");

                    b.Property<byte>("tbl_client_contact_group_isActive")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<byte>("tbl_client_contact_group_isDefault")
                        .HasColumnType("tinyint(3) unsigned");

                    b.HasKey("idtbl_client_contact_group")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_client_contact_group");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_client_header", b =>
                {
                    b.Property<int>("idtbl_client_header")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("BillingAddressCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("DeliveryAddressCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PickupAddressCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("tbl_billing_address_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_client_header_abn")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("tbl_client_header_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tbl_client_header_closestPort")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_client_header_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_client_header_companyName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("tbl_client_header_contactName")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_client_header_createdBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("tbl_client_header_createdDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_client_header_email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("tbl_client_header_is_agent")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("tbl_client_header_is_broker")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("tbl_client_header_is_carrier")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("tbl_client_header_is_consignee")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("tbl_client_header_is_consignor")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("tbl_client_header_is_payable")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("tbl_client_header_is_receivable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tbl_client_header_phone")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("tbl_delivery_address_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_pickup_address_id")
                        .HasColumnType("int(11)");

                    b.HasKey("idtbl_client_header")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_billing_address_id" }, "FK_tbl_client_header_tbl_address_tbl_address_billing_addres_idx");

                    b.HasIndex(new[] { "tbl_delivery_address_id" }, "FK_tbl_client_header_tbl_address_tbl_address_delivery_addre_idx");

                    b.HasIndex(new[] { "tbl_pickup_address_id" }, "FK_tbl_client_header_tbl_address_tbl_address_id_idx");

                    b.ToTable("tbl_client_header");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_container", b =>
                {
                    b.Property<int>("idtbl_container")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("MasterCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_container_cargoType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_container_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("tbl_container_createdDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("tbl_container_grossWeight")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_container_isoType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_container_number")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("tbl_container_qty")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_container_sealNumber")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_container_sealedBy")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_container_status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("tbl_master_id")
                        .HasColumnType("int(11)");

                    b.HasKey("idtbl_container")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_master_id" }, "FK_tbl_container_tbl_master_tbl_master_id_idx");

                    b.ToTable("tbl_container");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_containerType", b =>
                {
                    b.Property<int>("idtbl_containerType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_containerType_description")
                        .HasColumnType("longtext");

                    b.HasKey("idtbl_containerType")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_containerType");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_default_setting", b =>
                {
                    b.Property<int>("idtbl_default_settings")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("AddedBy")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DateAdded")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("isBillTo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tbl_address_type")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("tbl_contact_group_id")
                        .HasColumnType("int(11)");

                    b.Property<bool>("tbl_default_settings_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("tbl_incoterm_id")
                        .HasColumnType("int(11)");

                    b.HasKey("idtbl_default_settings")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_default_settings");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_document", b =>
                {
                    b.Property<int>("idtbl_document")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("added_by")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("date_added")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("document")
                        .HasColumnType("longtext");

                    b.Property<int>("house_reference")
                        .HasColumnType("int(11)");

                    b.Property<int>("master_reference")
                        .HasColumnType("int(11)");

                    b.Property<int>("shipment_reference")
                        .HasColumnType("int(11)");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.HasKey("idtbl_document")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "house_reference" }, "idx_document_house_link_idx");

                    b.HasIndex(new[] { "master_reference" }, "idx_document_master_link_idx");

                    b.HasIndex(new[] { "shipment_reference" }, "idx_document_shipment_link_idx");

                    b.ToTable("tbl_documents");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_dynamic_filter", b =>
                {
                    b.Property<int>("idtbl_dynamic_filters")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_dynamic_filters_column")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_dynamic_filters_condition")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_dynamic_filters_module")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_dynamic_filters_user")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("tbl_dynamic_filters_value")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("idtbl_dynamic_filters")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "idtbl_dynamic_filters" }, "idtbl_dynamic_filters_UNIQUE")
                        .IsUnique();

                    b.ToTable("tbl_dynamic_filters");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_field_condition", b =>
                {
                    b.Property<int>("tbl_field_conditions_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_field_conditions")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_field_conditions_name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_field_conditions_requirement")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_field_conditions_type")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("tbl_field_conditions_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_field_conditions");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_house", b =>
                {
                    b.Property<int>("idtbl_house")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("ConsigneeCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConsignorCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContainerCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("IncotermsCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("MasterCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("tbl_consignee_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_consignor_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_container_id")
                        .HasColumnType("int(11)");

                    b.Property<byte>("tbl_house_DG")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<byte>("tbl_house_FTA")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<string>("tbl_house_UN")
                        .HasColumnType("longtext");

                    b.Property<string>("tbl_house_airJobReference")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_billNumber")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_house_class")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("tbl_house_clearanceDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_house_code")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_house_coloaderCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("tbl_house_coo")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<DateTime>("tbl_house_createdDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_house_currency")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_delivery")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("tbl_house_deliveryDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_house_deliveryInstructions")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_house_description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_house_destinationAirport")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_house_height")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_house_incotermCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_latestTracking")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_house_length")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_house_native_description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_house_originAirport")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_packaging")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("tbl_house_qty")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_house_serviceCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_shipperCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("tbl_house_tailLiftD")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<byte>("tbl_house_tailLiftO")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<string>("tbl_house_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_house_value")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("tbl_house_volume")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_house_volumeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_house_weight")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_house_weightUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_house_width")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<int?>("tbl_incoterms_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_master_id")
                        .HasColumnType("int(11)");

                    b.HasKey("idtbl_house")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_consignee_id" }, "FK_tbl_house_tbl_client_header_tbl_consignee_id_idx");

                    b.HasIndex(new[] { "tbl_consignor_id" }, "FK_tbl_house_tbl_client_header_tbl_consignor_id_idx");

                    b.HasIndex(new[] { "tbl_incoterms_id" }, "FK_tbl_house_tbl_incoterms_tbl_incoterms_id_idx");

                    b.HasIndex(new[] { "tbl_container_id" }, "IX_tbl_hawb_tbl_container_id");

                    b.HasIndex(new[] { "tbl_master_id" }, "IX_tbl_hawb_tbl_master_id");

                    b.ToTable("tbl_house");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_house_item", b =>
                {
                    b.Property<int>("idtbl_house_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("HouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("tbl_house_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_house_item_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_item_description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<byte>("tbl_house_item_dg")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<decimal>("tbl_house_item_height")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("tbl_house_item_length")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<int>("tbl_house_item_qty")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_house_item_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_house_item_volumeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_house_item_weight")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_house_item_weightUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_house_item_width")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.HasKey("idtbl_house_item")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_house_id" }, "FK_tbl_house_items_tbl_house_tbl_house_id_idx");

                    b.ToTable("tbl_house_items");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_hunterrate", b =>
                {
                    b.Property<string>("tbl_hunterrates_injectionport")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("tbl_hunterrates_zone")
                        .HasColumnType("int(3)");

                    b.Property<decimal>("tbl_hunterrates_base")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("tbl_hunterrates_min")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("tbl_hunterrates_perkg")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("tbl_hunterrates_injectionport", "tbl_hunterrates_zone")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("tbl_hunterrates");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_hunterzone", b =>
                {
                    b.Property<string>("tbl_hunterzones_suburb")
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)");

                    b.Property<int>("tbl_hunterzones_postcode")
                        .HasColumnType("int(5)");

                    b.Property<string>("tbl_hunterzones_labelzone")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_hunterzones_routescan")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_hunterzones_state")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("tbl_hunterzones_zone")
                        .HasColumnType("int(2)");

                    b.HasKey("tbl_hunterzones_suburb", "tbl_hunterzones_postcode")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.ToTable("tbl_hunterzones");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_incoterm", b =>
                {
                    b.Property<int>("idtbl_incoterm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_incoterm_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_incoterm_description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("idtbl_incoterm")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_incoterms");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_item_sku", b =>
                {
                    b.Property<int>("idtbl_item_sku")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_item_sku_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_items_batchNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_items_batteryPacking")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_items_batteryType")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("tbl_items_dangerousGoods")
                        .HasColumnType("tinyint(3) unsigned");

                    b.Property<string>("tbl_items_description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal>("tbl_items_height")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_items_hsCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_items_length")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_items_nativeDescription")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_items_originCountry")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_items_productUrl")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("tbl_items_qty")
                        .HasColumnType("int(11)");

                    b.Property<decimal>("tbl_items_value")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("tbl_items_volume")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_items_volumeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_items_weight")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_items_weightUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_items_width")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.HasKey("idtbl_item_sku")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_item_sku");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_manifest", b =>
                {
                    b.Property<int>("idtbl_manifest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("tbl_manifest_active")
                        .HasColumnType("int");

                    b.Property<string>("tbl_manifest_carrier")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("tbl_manifest_created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_manifest_prefix")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("tbl_manifest_sent_date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("idtbl_manifest");

                    b.ToTable("tbl_manifests");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_master", b =>
                {
                    b.Property<int>("idtbl_master")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("VoyageCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("carrierAgentCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("creditorAgentCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("destinationAgentCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("originAgentCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("tbl_client_header_carrier_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_client_header_creditor_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_client_header_destination_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_client_header_origin_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_master_billNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_master_bookingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_master_code")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_master_containerMode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("tbl_master_createdDate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_master_status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_master_transportType")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_master_type")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("tbl_voyage_id")
                        .HasColumnType("int(11)");

                    b.HasKey("idtbl_master")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_client_header_carrier_id" }, "IX_tbl_master_tbl_client_header_carrier_id");

                    b.HasIndex(new[] { "tbl_client_header_creditor_id" }, "IX_tbl_master_tbl_client_header_creditor_id");

                    b.HasIndex(new[] { "tbl_client_header_destination_id" }, "IX_tbl_master_tbl_client_header_destination_id");

                    b.HasIndex(new[] { "tbl_client_header_origin_id" }, "IX_tbl_master_tbl_client_header_origin_id");

                    b.HasIndex(new[] { "tbl_voyage_id" }, "IX_tbl_master_tbl_voyage_id");

                    b.ToTable("tbl_master");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_nz_routing", b =>
                {
                    b.Property<int>("tbl_routings_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_routings_code")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_routings_states")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_routings_suburbs")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("tbl_routings_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_nz_routings");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_parcel_tracking", b =>
                {
                    b.Property<int>("tbl_parcel_tracking_id")
                        .HasColumnType("int(11)");

                    b.Property<sbyte>("tbl_parcel_tracking_received")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("tbl_parcel_tracking_shipmentId")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("tbl_parcel_tracking_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_parcel_tracking");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_pluscourier", b =>
                {
                    b.Property<int>("tbl_pluscourier_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_pluscourier_distance")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_pluscourier_postcode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_pluscourier_suburb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("tbl_pluscourier_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_pluscourier");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_pluscourier_rate", b =>
                {
                    b.Property<int>("tbl_pluscourier_rate_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_pluscourier_rate_km")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_pluscourier_rate_notes")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<decimal?>("tbl_pluscourier_rate_pallet")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("tbl_pluscourier_rate_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_pluscourier_rate");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_receptacle", b =>
                {
                    b.Property<int>("idtbl_receptacle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("HouseCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("tbl_house_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_receptacle_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("tbl_receptacle_createdDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_receptacle_destination")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_receptacle_height")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("tbl_receptacle_length")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_receptacle_mode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_receptacle_origin")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("tbl_receptacle_qty")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_receptacle_shipper_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_receptacle_status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_receptacle_type")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("tbl_receptacle_weight")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal>("tbl_receptacle_width")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.HasKey("idtbl_receptacle")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_house_id" }, "IX_tbl_receptacle_tbl_house_id");

                    b.ToTable("tbl_receptacle");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_return", b =>
                {
                    b.Property<int>("tbl_returns_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_returns_address1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_address2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_address3")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_city")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_country")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_option")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_postcode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_reference")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_state")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_status")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_suburb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("tbl_returns_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_returns");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_returns_sku", b =>
                {
                    b.Property<int>("tbl_returns_sku_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_returns_sku_action")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_sku_batch")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_sku_dangerousgoods")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_sku_description")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_sku_hscode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_returns_sku_value")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("tbl_returns_sku_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_returns_sku");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_routing", b =>
                {
                    b.Property<int>("idtbl_routing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("VoyageNumber")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("tbl_routing_cutoffDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("tbl_voyage_ata")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("tbl_voyage_atd")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_voyage_dischargePort")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("tbl_voyage_eta")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("tbl_voyage_etd")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("tbl_voyage_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_voyage_loadPort")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("idtbl_routing")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_voyage_id" }, "IX_tbl_routing_tbl_voyage_id");

                    b.ToTable("tbl_routing");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_sea_shipment", b =>
                {
                    b.Property<int>("tbl_sea_shipment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<sbyte?>("tbl_sea_shipment_COO")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("tbl_sea_shipment_DG")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("tbl_sea_shipment_FTA")
                        .HasColumnType("tinyint(4)");

                    b.Property<decimal?>("tbl_sea_shipment_UN")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)");

                    b.Property<DateTime?>("tbl_sea_shipment_ata")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("tbl_sea_shipment_atd")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_sea_shipment_class")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("tbl_sea_shipment_clearancedate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_sea_shipment_coloaderCode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_currency")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime?>("tbl_sea_shipment_deliverydate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_sea_shipment_description")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_destinationPort")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<DateTime?>("tbl_sea_shipment_eta")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("tbl_sea_shipment_etd")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_sea_shipment_howb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_incotermCode")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("tbl_sea_shipment_latestTracking")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_mowb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_notes")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_originPort")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("tbl_sea_shipment_packaging")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("tbl_sea_shipment_pieces")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_sea_shipment_receiverAddress1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_receiverAddress2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_receiverBusiness")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_receiverCity")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("tbl_sea_shipment_receiverCountry")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_sea_shipment_receiverEmail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_receiverName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_receiverPhone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_sea_shipment_receiverPostcode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_sea_shipment_receiverState")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_sea_shipment_receiverSuburb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_seaJobReference")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderAddress1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderAddress2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderBusiness")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderCity")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderCountry")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderEmail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderPhone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderPostcode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderRef")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderState")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_senderSuburb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_service")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_shipperID")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_sea_shipment_shippingLine")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_sea_shipment_status")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<sbyte?>("tbl_sea_shipment_tailLiftD")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("tbl_sea_shipment_tailLiftO")
                        .HasColumnType("tinyint(4)");

                    b.Property<DateTime?>("tbl_sea_shipment_timestamp")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_sea_shipment_transit1")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("tbl_sea_shipment_transit2")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("tbl_sea_shipment_transit3")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("tbl_sea_shipment_type")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<decimal?>("tbl_sea_shipment_value")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)");

                    b.Property<decimal?>("tbl_sea_shipment_volume")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)");

                    b.Property<decimal?>("tbl_sea_shipment_weight")
                        .HasPrecision(10)
                        .HasColumnType("decimal(10)");

                    b.HasKey("tbl_sea_shipment_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_sea_shipment");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_service", b =>
                {
                    b.Property<int>("tbl_services_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<bool>("tbl_services_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tbl_services_carrierAccount")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_services_carrierCode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_services_carrierId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_services_code")
                        .IsRequired()
                        .HasMaxLength(22)
                        .HasColumnType("varchar(22)");

                    b.Property<string>("tbl_services_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_services_prefixCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("tbl_services_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_services");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipment", b =>
                {
                    b.Property<int>("idtbl_shipment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("IncotermsCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("ReceptacleCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("tbl_incoterms_id")
                        .HasColumnType("int(11)");

                    b.Property<int?>("tbl_receptable_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_shipment_abnNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<bool?>("tbl_shipment_authorityToLeave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("tbl_shipment_batchCode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_shipment_code")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("tbl_shipment_coverAmount")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<DateTime?>("tbl_shipment_createdDate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_shipment_deliveryAddressLine1")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_deliveryAddressLine2")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_deliveryAddressLine3")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_deliveryCity")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryCompany")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryContact")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryContactEmail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryContactPhone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryCountry")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime?>("tbl_shipment_deliveryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_shipment_deliveryEmail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryInstructions")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_deliveryName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryPhone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryPostcode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliveryState")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_deliverySuburb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<bool?>("tbl_shipment_dg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("tbl_shipment_dgClass")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_dgPackaging")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_dgUn")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_facility")
                        .HasColumnType("text");

                    b.Property<bool?>("tbl_shipment_gstExemptionCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<bool?>("tbl_shipment_hasLockerService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("tbl_shipment_incoterm")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("tbl_shipment_instruction")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_invoiceCurrency")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<decimal?>("tbl_shipment_invoiceValue")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)");

                    b.Property<string>("tbl_shipment_nativeDescription")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_orderItems")
                        .HasColumnType("text");

                    b.Property<string>("tbl_shipment_phone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_platform")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("tbl_shipment_readyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_shipment_referenceNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_shipment_returnAddress1")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_returnAddress2")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_returnAddress3")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_returnCity")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_returnCountry")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("tbl_shipment_returnName")
                        .HasColumnType("text");

                    b.Property<string>("tbl_shipment_returnOption")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("tbl_shipment_returnPostcode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_shipment_returnState")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_shipment_serviceCode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_serviceOption")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipmentItems")
                        .HasColumnType("text");

                    b.Property<string>("tbl_shipment_shipperAddressLine1")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_shipperAddressLine2")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_shipperAddressLine3")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_shipperCity")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipperCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("tbl_shipment_shipperCompany")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipperContact")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipperCountry")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("tbl_shipment_shipperEmail")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipperInstructions")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("tbl_shipment_shipperName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipperPhone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipperPostcode")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tbl_shipment_shipperState")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_shipperSuburb")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_sortCode")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_status")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool?>("tbl_shipment_tailLiftD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<bool?>("tbl_shipment_tailLiftO")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("tbl_shipment_trackingNo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("tbl_shipment_vendorId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_shipment_warehouse")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("idtbl_shipment")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_incoterms_id" }, "FK_tbl_shipment_tbl_incoterms_tbl_incoterms_id_idx");

                    b.HasIndex(new[] { "tbl_receptable_id" }, "FK_tbl_shipment_tbl_receptacle_tbl_receptacle_id_idx");

                    b.ToTable("tbl_shipment");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipment_item", b =>
                {
                    b.Property<int>("idtbl_shipment_item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("ShipmentCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("tbl_shipment_id")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_shipment_item_code")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<sbyte?>("tbl_shipment_item_dangerousGoods")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("tbl_shipment_item_description")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<decimal?>("tbl_shipment_item_height")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<decimal?>("tbl_shipment_item_length")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<int?>("tbl_shipment_item_qty")
                        .HasColumnType("int(3)");

                    b.Property<string>("tbl_shipment_item_type")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("tbl_shipment_item_volumeUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("tbl_shipment_item_weight")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.Property<string>("tbl_shipment_item_weightUnit")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("tbl_shipment_item_width")
                        .HasPrecision(12, 3)
                        .HasColumnType("decimal(12,3)");

                    b.HasKey("idtbl_shipment_item")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_shipment_id" }, "FK_tbl_shipmentl_items_tbl_shipment_tbl_shipment_id_idx");

                    b.ToTable("tbl_shipment_items");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipper", b =>
                {
                    b.Property<int>("tbl_shippers_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_air_prefix")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<bool>("tbl_shippers_active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("tbl_shippers_code")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("tbl_shippers_country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("tbl_shippers_creation_date")
                        .HasColumnType("date");

                    b.Property<string>("tbl_shippers_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("tbl_shippers_prefix")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("tbl_shipperscol")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("tbl_shippers_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_shippers");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shippers_air_ref", b =>
                {
                    b.Property<int>("idtbl_shippers_air_ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_shippers_air_batch_id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("tbl_shippers_air_createDate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_shippers_air_prefix")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("tbl_shippers_air_shipmentId")
                        .HasColumnType("int(11)");

                    b.HasKey("idtbl_shippers_air_ref")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_shippers_air_ref");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shippers_tracking_ref", b =>
                {
                    b.Property<int>("idshippers_tracking_ref")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_shippers_tracking_batch_id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("tbl_shippers_tracking_createDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("tbl_shippers_tracking_est_cost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("tbl_shippers_tracking_prefix")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int?>("tbl_shippers_tracking_shipmentId")
                        .HasColumnType("int(11)");

                    b.HasKey("idshippers_tracking_ref")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_shippers_tracking_ref");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipping_billing", b =>
                {
                    b.Property<int>("idtbl_shipping_billing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("tbl_shipment_id")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("tbl_shipping_billing_dateAdded")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_shipping_billing_orderId")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_shipping_billing_referenceNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("tbl_shipping_billing_shippingCost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("tbl_shipping_billing_status")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_shipping_billing_trackingNo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("idtbl_shipping_billing")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "tbl_shipment_id" }, "IX_tbl_shipping_billing_tbl_shipment_id");

                    b.ToTable("tbl_shipping_billing");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_ticket", b =>
                {
                    b.Property<int>("tbl_tickets_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_tickets_comments")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("tbl_tickets_owner")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("tbl_tickets_priority")
                        .HasColumnType("int(11)");

                    b.Property<string>("tbl_tickets_status")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime?>("tbl_tickets_timestamp")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_tickets_type")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("tbl_tickets_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_tickets");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_tracking_3pl", b =>
                {
                    b.Property<int>("tbl_tracking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("tbl_tracking_createDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_tracking_prefix")
                        .HasColumnType("longtext");

                    b.Property<int>("tbl_tracking_shipmentID")
                        .HasColumnType("int(11)");

                    b.HasKey("tbl_tracking_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_tracking_3pl");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_tracking_amazon", b =>
                {
                    b.Property<int>("tbl_tracking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("tbl_tracking_createDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_tracking_prefix")
                        .HasColumnType("longtext");

                    b.Property<int>("tbl_tracking_shipmentID")
                        .HasColumnType("int(11)");

                    b.HasKey("tbl_tracking_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_tracking_amazon");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_tracking_austway", b =>
                {
                    b.Property<int>("tbl_tracking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("tbl_tracking_createDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_tracking_prefix")
                        .HasColumnType("longtext");

                    b.Property<int>("tbl_tracking_shipmentID")
                        .HasColumnType("int(11)");

                    b.HasKey("tbl_tracking_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_tracking_austway");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_tracking_border", b =>
                {
                    b.Property<int>("tbl_tracking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("tbl_tracking_createDate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_tracking_prefix")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValueSql("'VCN'");

                    b.Property<int?>("tbl_tracking_shipmentID")
                        .HasColumnType("int(5)");

                    b.HasKey("tbl_tracking_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_tracking_border");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_tracking_nz", b =>
                {
                    b.Property<int>("tbl_tracking_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("tbl_tracking_createDate")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_tracking_prefix")
                        .HasColumnType("longtext");

                    b.Property<int>("tbl_tracking_shipmentID")
                        .HasColumnType("int(11)");

                    b.HasKey("tbl_tracking_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_tracking_nz");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_tracking_tnt", b =>
                {
                    b.Property<int>("tbl_tracking_tnt_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("tbl_tracking_tnt_createDate")
                        .HasColumnType("datetime");

                    b.Property<string>("tbl_tracking_tnt_prefix")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasDefaultValueSql("'VCN'");

                    b.Property<int?>("tbl_tracking_tnt_shipmentID")
                        .HasColumnType("int(5)");

                    b.HasKey("tbl_tracking_tnt_id")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_tracking_tnt");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_voyage", b =>
                {
                    b.Property<int>("idtbl_voyage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<DateTime>("tbl_voyage_ata")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("tbl_voyage_atd")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_voyage_carrierCode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_voyage_code")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_voyage_destinationPort")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_voyage_dischargePort")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("tbl_voyage_eta")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("tbl_voyage_etaDischarge")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("tbl_voyage_etd")
                        .HasMaxLength(6)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("tbl_voyage_loadPort")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_voyage_number")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_voyage_status")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_voyage_type")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("tbl_voyage_vesselNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("idtbl_voyage")
                        .HasName("PRIMARY");

                    b.ToTable("tbl_voyage");
                });

            modelBuilder.Entity("tbl_client_contact_detailtbl_client_contact_group", b =>
                {
                    b.Property<int>("contactDetailsidtbl_client_contact_detail")
                        .HasColumnType("int(11)");

                    b.Property<int>("contactGroupsidtbl_client_contact_group")
                        .HasColumnType("int(11)");

                    b.HasKey("contactDetailsidtbl_client_contact_detail", "contactGroupsidtbl_client_contact_group");

                    b.HasIndex("contactGroupsidtbl_client_contact_group");

                    b.ToTable("tbl_client_contact_detailtbl_client_contact_group");
                });

            modelBuilder.Entity("tbl_house_itemtbl_item_sku", b =>
                {
                    b.Property<int>("houseItemsidtbl_house_item")
                        .HasColumnType("int(11)");

                    b.Property<int>("itemSkusidtbl_item_sku")
                        .HasColumnType("int(11)");

                    b.HasKey("houseItemsidtbl_house_item", "itemSkusidtbl_item_sku");

                    b.HasIndex("itemSkusidtbl_item_sku");

                    b.ToTable("tbl_house_itemtbl_item_sku");
                });

            modelBuilder.Entity("tbl_item_skutbl_shipment_item", b =>
                {
                    b.Property<int>("itemSkusidtbl_item_sku")
                        .HasColumnType("int(11)");

                    b.Property<int>("shipmentItemsidtbl_shipment_item")
                        .HasColumnType("int(11)");

                    b.HasKey("itemSkusidtbl_item_sku", "shipmentItemsidtbl_shipment_item");

                    b.HasIndex("shipmentItemsidtbl_shipment_item");

                    b.ToTable("tbl_item_skutbl_shipment_item");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_client_contact_detail", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_address", "address")
                        .WithMany("contactDetails")
                        .HasForeignKey("tbl_address_id");

                    b.HasOne("BTAS.Data.Models.tbl_client_header", "clientHeader")
                        .WithMany("contactDetails")
                        .HasForeignKey("tbl_client_header_id")
                        .HasConstraintName("FK_tbl_client_contact_details_tlb_client_header");

                    b.Navigation("address");

                    b.Navigation("clientHeader");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_client_header", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_address", "billingAddress")
                        .WithMany("billingAddresses")
                        .HasForeignKey("tbl_billing_address_id")
                        .HasConstraintName("FK_tbl_client_header_tbl_address_tbl_address_billing_address_id");

                    b.HasOne("BTAS.Data.Models.tbl_address", "deliveryAddress")
                        .WithMany("deliveryAddresses")
                        .HasForeignKey("tbl_delivery_address_id")
                        .HasConstraintName("FK_tbl_client_header_tbl_address_tbl_address_delivery_address_id");

                    b.HasOne("BTAS.Data.Models.tbl_address", "pickupAddress")
                        .WithMany("pickupAddresses")
                        .HasForeignKey("tbl_pickup_address_id")
                        .HasConstraintName("FK_tbl_client_header_tbl_address_tbl_address_id");

                    b.Navigation("billingAddress");

                    b.Navigation("deliveryAddress");

                    b.Navigation("pickupAddress");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_container", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_master", "master")
                        .WithMany("containers")
                        .HasForeignKey("tbl_master_id");

                    b.Navigation("master");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_document", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_house", "house")
                        .WithMany("documents")
                        .HasForeignKey("house_reference")
                        .HasConstraintName("document_house_link")
                        .IsRequired();

                    b.HasOne("BTAS.Data.Models.tbl_master", "master")
                        .WithMany("documents")
                        .HasForeignKey("master_reference")
                        .HasConstraintName("document_master_link")
                        .IsRequired();

                    b.HasOne("BTAS.Data.Models.tbl_shipment", "shipment")
                        .WithMany("documents")
                        .HasForeignKey("shipment_reference")
                        .HasConstraintName("document_shipment_link")
                        .IsRequired();

                    b.Navigation("house");

                    b.Navigation("master");

                    b.Navigation("shipment");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_house", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_client_header", "consignee")
                        .WithMany("consignees")
                        .HasForeignKey("tbl_consignee_id")
                        .HasConstraintName("FK_tbl_house_tbl_client_header_tbl_consignee_id");

                    b.HasOne("BTAS.Data.Models.tbl_client_header", "consignor")
                        .WithMany("consignors")
                        .HasForeignKey("tbl_consignor_id")
                        .HasConstraintName("FK_tbl_house_tbl_client_header_tbl_consignor_id");

                    b.HasOne("BTAS.Data.Models.tbl_container", "container")
                        .WithMany("houses")
                        .HasForeignKey("tbl_container_id")
                        .HasConstraintName("FK_tbl_house_tbl_container_tbl_container_id");

                    b.HasOne("BTAS.Data.Models.tbl_incoterm", "incoterm")
                        .WithMany("houses")
                        .HasForeignKey("tbl_incoterms_id")
                        .HasConstraintName("FK_tbl_house_tbl_incoterms_tbl_incoterms_id");

                    b.HasOne("BTAS.Data.Models.tbl_master", "master")
                        .WithMany("houses")
                        .HasForeignKey("tbl_master_id")
                        .HasConstraintName("FK_tbl_house_tbl_master_tbl_master_id");

                    b.Navigation("consignee");

                    b.Navigation("consignor");

                    b.Navigation("container");

                    b.Navigation("incoterm");

                    b.Navigation("master");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_house_item", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_house", "house")
                        .WithMany("houseItems")
                        .HasForeignKey("tbl_house_id");

                    b.Navigation("house");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_master", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_client_header", "carrierAgent")
                        .WithMany("carriers")
                        .HasForeignKey("tbl_client_header_carrier_id")
                        .HasConstraintName("FK_tbl_master_tbl_client_header_tbl_client_header_carrier_id");

                    b.HasOne("BTAS.Data.Models.tbl_client_header", "creditorAgent")
                        .WithMany("creditors")
                        .HasForeignKey("tbl_client_header_creditor_id")
                        .HasConstraintName("FK_tbl_master_tbl_client_header_tbl_client_header_creditor_id");

                    b.HasOne("BTAS.Data.Models.tbl_client_header", "destinationAgent")
                        .WithMany("destinations")
                        .HasForeignKey("tbl_client_header_destination_id")
                        .HasConstraintName("FK_tbl_master_tbl_client_header_tbl_client_header_destination_id");

                    b.HasOne("BTAS.Data.Models.tbl_client_header", "originAgent")
                        .WithMany("origins")
                        .HasForeignKey("tbl_client_header_origin_id")
                        .HasConstraintName("FK_tbl_master_tbl_client_header_tbl_client_header_origin_id");

                    b.HasOne("BTAS.Data.Models.tbl_voyage", "voyage")
                        .WithMany("masters")
                        .HasForeignKey("tbl_voyage_id")
                        .HasConstraintName("FK_tbl_master_tbl_voyage_tbl_voyage_id");

                    b.Navigation("carrierAgent");

                    b.Navigation("creditorAgent");

                    b.Navigation("destinationAgent");

                    b.Navigation("originAgent");

                    b.Navigation("voyage");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_receptacle", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_house", "house")
                        .WithMany("receptacles")
                        .HasForeignKey("tbl_house_id");

                    b.Navigation("house");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_routing", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_voyage", "voyage")
                        .WithMany("routings")
                        .HasForeignKey("tbl_voyage_id");

                    b.Navigation("voyage");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipment", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_incoterm", "incoterm")
                        .WithMany("shipments")
                        .HasForeignKey("tbl_incoterms_id");

                    b.HasOne("BTAS.Data.Models.tbl_receptacle", "receptable")
                        .WithMany("shipments")
                        .HasForeignKey("tbl_receptable_id")
                        .HasConstraintName("FK_tbl_shipment_tbl_receptacle_tbl_receptacle_id");

                    b.Navigation("incoterm");

                    b.Navigation("receptable");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipment_item", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_shipment", "shipment")
                        .WithMany("shipmentItems")
                        .HasForeignKey("tbl_shipment_id")
                        .HasConstraintName("FK_tbl_shipment_item_tbl_shipment_tbl_shipment_id");

                    b.Navigation("shipment");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipping_billing", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_shipment", "shipment")
                        .WithMany("billings")
                        .HasForeignKey("tbl_shipment_id")
                        .HasConstraintName("FK_tbl_shipping_billing_tbl_shipment_tbl_shipment_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("shipment");
                });

            modelBuilder.Entity("tbl_client_contact_detailtbl_client_contact_group", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_client_contact_detail", null)
                        .WithMany()
                        .HasForeignKey("contactDetailsidtbl_client_contact_detail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTAS.Data.Models.tbl_client_contact_group", null)
                        .WithMany()
                        .HasForeignKey("contactGroupsidtbl_client_contact_group")
                        .HasConstraintName("FK_tbl_client_contact_detailtbl_client_contact_group_tbl_clien~1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tbl_house_itemtbl_item_sku", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_house_item", null)
                        .WithMany()
                        .HasForeignKey("houseItemsidtbl_house_item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTAS.Data.Models.tbl_item_sku", null)
                        .WithMany()
                        .HasForeignKey("itemSkusidtbl_item_sku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("tbl_item_skutbl_shipment_item", b =>
                {
                    b.HasOne("BTAS.Data.Models.tbl_item_sku", null)
                        .WithMany()
                        .HasForeignKey("itemSkusidtbl_item_sku")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BTAS.Data.Models.tbl_shipment_item", null)
                        .WithMany()
                        .HasForeignKey("shipmentItemsidtbl_shipment_item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_address", b =>
                {
                    b.Navigation("billingAddresses");

                    b.Navigation("contactDetails");

                    b.Navigation("deliveryAddresses");

                    b.Navigation("pickupAddresses");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_client_header", b =>
                {
                    b.Navigation("carriers");

                    b.Navigation("consignees");

                    b.Navigation("consignors");

                    b.Navigation("contactDetails");

                    b.Navigation("creditors");

                    b.Navigation("destinations");

                    b.Navigation("origins");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_container", b =>
                {
                    b.Navigation("houses");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_house", b =>
                {
                    b.Navigation("documents");

                    b.Navigation("houseItems");

                    b.Navigation("receptacles");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_incoterm", b =>
                {
                    b.Navigation("houses");

                    b.Navigation("shipments");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_master", b =>
                {
                    b.Navigation("containers");

                    b.Navigation("documents");

                    b.Navigation("houses");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_receptacle", b =>
                {
                    b.Navigation("shipments");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_shipment", b =>
                {
                    b.Navigation("billings");

                    b.Navigation("documents");

                    b.Navigation("shipmentItems");
                });

            modelBuilder.Entity("BTAS.Data.Models.tbl_voyage", b =>
                {
                    b.Navigation("masters");

                    b.Navigation("routings");
                });
#pragma warning restore 612, 618
        }
    }
}
